"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/start",{

/***/ "./components/CustomSandpack.tsx":
/*!***************************************!*\
  !*** ./components/CustomSandpack.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CustomSandpack: function() { return /* binding */ CustomSandpack; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _raw_loader_build_sandpack_index_d_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !!raw-loader!../.build-sandpack/index.d.ts */ \"../node_modules/.pnpm/raw-loader@4.0.2_webpack@5.83.1/node_modules/raw-loader/dist/cjs.js!./.build-sandpack/index.d.ts\");\n/* harmony import */ var _raw_loader_build_sandpack_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !!raw-loader!../.build-sandpack/index.js */ \"../node_modules/.pnpm/raw-loader@4.0.2_webpack@5.83.1/node_modules/raw-loader/dist/cjs.js!./.build-sandpack/index.js\");\n/* harmony import */ var _raw_loader_examples_start_tsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !!raw-loader!../examples/start.tsx */ \"../node_modules/.pnpm/raw-loader@4.0.2_webpack@5.83.1/node_modules/raw-loader/dist/cjs.js!./examples/start.tsx\");\n/* harmony import */ var _codesandbox_sandpack_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @codesandbox/sandpack-react */ \"../node_modules/.pnpm/@codesandbox+sandpack-react@2.6.1_@lezer+common@1.0.3_react-dom@18.2.0_react@18.2.0/node_modules/@codesandbox/sandpack-react/dist/index.mjs\");\n\n\n\n\n\n\nfunction CustomSandpack(props) {\n    // const files = { '/App.tsx': props.children };\n    console.log(_raw_loader_examples_start_tsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_codesandbox_sandpack_react__WEBPACK_IMPORTED_MODULE_5__.Sandpack, {\n        template: \"react-ts\",\n        customSetup: {\n            dependencies: {\n                \"date-fns\": \"latest\"\n            }\n        },\n        files: {\n            \"/App.tsx\": _raw_loader_examples_start_tsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n            \"/node_modules/react-day-picker/package.json\": {\n                hidden: true,\n                code: JSON.stringify({\n                    name: \"react-day-picker\",\n                    main: \"./index.js\"\n                })\n            },\n            \"/node_modules/react-day-picker/index.js\": {\n                hidden: true,\n                code: _raw_loader_build_sandpack_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n            },\n            \"/node_modules/react-day-picker/index.d.ts\": {\n                hidden: true,\n                code: _raw_loader_build_sandpack_index_d_ts__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n            }\n        }\n    }, void 0, false, {\n        fileName: \"/Users/gp/Developer/react-day-picker/docs/components/CustomSandpack.tsx\",\n        lineNumber: 13,\n        columnNumber: 5\n    }, this);\n}\n_c = CustomSandpack;\nvar _c;\n$RefreshReg$(_c, \"CustomSandpack\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0N1c3RvbVNhbmRwYWNrLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTBCO0FBRStDO0FBQ0w7QUFDWDtBQUNGO0FBRWhELFNBQVNLLGVBQWVDLEtBQTJCO0lBQ3hELGdEQUFnRDtJQUVoREMsUUFBUUMsR0FBRyxDQUFDTCxzRUFBT0E7SUFDbkIscUJBQ0UsOERBQUNDLGlFQUFRQTtRQUNQSyxVQUFTO1FBQ1RDLGFBQWE7WUFDWEMsY0FBYztnQkFDWixZQUFZO1lBQ2Q7UUFDRjtRQUNBQyxPQUFPO1lBQ0wsWUFBWVQsc0VBQU9BO1lBQ25CLCtDQUErQztnQkFDN0NVLFFBQVE7Z0JBQ1JDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztvQkFDbkJDLE1BQU07b0JBQ05DLE1BQU07Z0JBQ1I7WUFDRjtZQUNBLDJDQUEyQztnQkFDekNMLFFBQVE7Z0JBQ1JDLE1BQU1aLDJFQUFZQTtZQUNwQjtZQUNBLDZDQUE2QztnQkFDM0NXLFFBQVE7Z0JBQ1JDLE1BQU1iLDZFQUFlQTtZQUN2QjtRQUNGOzs7Ozs7QUFHTjtLQWhDZ0JJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvQ3VzdG9tU2FuZHBhY2sudHN4PzE1MmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGRheVBpY2tlckRUU1JhdyBmcm9tICchIXJhdy1sb2FkZXIhLi4vLmJ1aWxkLXNhbmRwYWNrL2luZGV4LmQudHMnO1xuaW1wb3J0IGRheVBpY2tlclJhdyBmcm9tICchIXJhdy1sb2FkZXIhLi4vLmJ1aWxkLXNhbmRwYWNrL2luZGV4LmpzJztcbmltcG9ydCBleGFtcGxlIGZyb20gJyEhcmF3LWxvYWRlciEuLi9leGFtcGxlcy9zdGFydC50c3gnO1xuaW1wb3J0IHsgU2FuZHBhY2sgfSBmcm9tICdAY29kZXNhbmRib3gvc2FuZHBhY2stcmVhY3QnO1xuXG5leHBvcnQgZnVuY3Rpb24gQ3VzdG9tU2FuZHBhY2socHJvcHM6IHsgY2hpbGRyZW46IHN0cmluZyB9KSB7XG4gIC8vIGNvbnN0IGZpbGVzID0geyAnL0FwcC50c3gnOiBwcm9wcy5jaGlsZHJlbiB9O1xuXG4gIGNvbnNvbGUubG9nKGV4YW1wbGUpO1xuICByZXR1cm4gKFxuICAgIDxTYW5kcGFja1xuICAgICAgdGVtcGxhdGU9XCJyZWFjdC10c1wiXG4gICAgICBjdXN0b21TZXR1cD17e1xuICAgICAgICBkZXBlbmRlbmNpZXM6IHtcbiAgICAgICAgICAnZGF0ZS1mbnMnOiAnbGF0ZXN0J1xuICAgICAgICB9XG4gICAgICB9fVxuICAgICAgZmlsZXM9e3tcbiAgICAgICAgJy9BcHAudHN4JzogZXhhbXBsZSxcbiAgICAgICAgJy9ub2RlX21vZHVsZXMvcmVhY3QtZGF5LXBpY2tlci9wYWNrYWdlLmpzb24nOiB7XG4gICAgICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgICAgIGNvZGU6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIG5hbWU6ICdyZWFjdC1kYXktcGlja2VyJyxcbiAgICAgICAgICAgIG1haW46ICcuL2luZGV4LmpzJ1xuICAgICAgICAgIH0pXG4gICAgICAgIH0sXG4gICAgICAgICcvbm9kZV9tb2R1bGVzL3JlYWN0LWRheS1waWNrZXIvaW5kZXguanMnOiB7XG4gICAgICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgICAgIGNvZGU6IGRheVBpY2tlclJhd1xuICAgICAgICB9LFxuICAgICAgICAnL25vZGVfbW9kdWxlcy9yZWFjdC1kYXktcGlja2VyL2luZGV4LmQudHMnOiB7XG4gICAgICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgICAgIGNvZGU6IGRheVBpY2tlckRUU1Jhd1xuICAgICAgICB9XG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJkYXlQaWNrZXJEVFNSYXciLCJkYXlQaWNrZXJSYXciLCJleGFtcGxlIiwiU2FuZHBhY2siLCJDdXN0b21TYW5kcGFjayIsInByb3BzIiwiY29uc29sZSIsImxvZyIsInRlbXBsYXRlIiwiY3VzdG9tU2V0dXAiLCJkZXBlbmRlbmNpZXMiLCJmaWxlcyIsImhpZGRlbiIsImNvZGUiLCJKU09OIiwic3RyaW5naWZ5IiwibmFtZSIsIm1haW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/CustomSandpack.tsx\n"));

/***/ }),

/***/ "../node_modules/.pnpm/raw-loader@4.0.2_webpack@5.83.1/node_modules/raw-loader/dist/cjs.js!./.build-sandpack/index.d.ts":
/*!******************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/raw-loader@4.0.2_webpack@5.83.1/node_modules/raw-loader/dist/cjs.js!./.build-sandpack/index.d.ts ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"import React$1, { ReactNode } from 'react';\\nimport { Locale as Locale$1 } from 'date-fns';\\n\\n/**\\n * Render the container with navigation and the month grids.\\n */\\ndeclare function Calendar(): JSX.Element;\\n\\n/** Represent a day displayed in a month. */\\ndeclare class DayPickerDay {\\n    constructor(date: Date, displayMonth: Date);\\n    /** In case of an outside day, the months where the date is displayed.  */\\n    displayMonth?: Date;\\n    /** The date. */\\n    date: Date;\\n}\\ndeclare class DayPickerWeek {\\n    constructor(weekNumber: number, days: DayPickerDay[]);\\n    weekNumber: number;\\n    days: DayPickerDay[];\\n}\\n/**\\n * A month displayed in as month grid. Contains the week\\n */\\ndeclare class DayPickerMonth {\\n    constructor(month: Date, weeks: DayPickerWeek[]);\\n    /** The date of the month. */\\n    date: Date;\\n    /** The weeks within the month. */\\n    weeks: DayPickerWeek[];\\n}\\n/** The calendar displayed in DayPicker. */\\ninterface DayPickerCalendar {\\n    /** The current month. When `numberOfMonths` is greater than one, is the first of the displayed months. */\\n    currentMonth: Date;\\n    /** The months displayed in the calendar. */\\n    months: DayPickerMonth[];\\n    /** All the dates displayed in the calendar. */\\n    dates: Date[];\\n    getDays: () => DayPickerDay[];\\n    /** Navigate to the specified month. */\\n    goToMonth: (month: Date) => void;\\n    /** Navigate to the next month. */\\n    goToNextMonth: () => void;\\n    /** Navigate to the previous month. */\\n    goToPreviousMonth: () => void;\\n    /** Navigate to the specified date. */\\n    goToDate: (date: Date, refDate?: Date) => void;\\n    /** The next month to display. */\\n    nextMonth?: Date;\\n    /** The previous month to display. */\\n    previousMonth?: Date;\\n    /** Whether the given day is included in the displayed months. */\\n    isDateDisplayed: (day: Date) => boolean;\\n}\\n\\ndeclare const calendarContext: React$1.Context<DayPickerCalendar | undefined>;\\n/**\\n * The provider for the {@link calendarContext}, storing the calendar state.\\n */\\ndeclare function CalendarProvider(providerProps: {\\n    children?: ReactNode;\\n}): JSX.Element;\\n/**\\n * Use this hook to access to the dates displayed in the calendar and to navigate between months.\\n */\\ndeclare function useCalendar(): DayPickerCalendar;\\n\\n/**\\n * A value or a function that matches a specific day.\\n *\\n * Matchers are passed to DayPicker via {@link DayPickerBase.disabled},\\n * {@link DayPickerBase.hidden} or {@link DayPickerProps.selected} and are used to\\n * determine if a day should get a {@link Modifier}.\\n *\\n * Matchers can be of different types:\\n *\\n * ```tsx\\n * // will always match the day\\n * const booleanMatcher: Matcher = true;\\n *\\n * // will match the today's date\\n * const dateMatcher: Matcher = new Date();\\n *\\n * // will match the days in the array\\n * const arrayMatcher: Matcher = [new Date(2019, 1, 2);, new Date(2019, 1, 4)];\\n *\\n * // will match days after the 2nd of February 2019\\n * const afterMatcher: DateAfter = { after: new Date(2019, 1, 2); };\\n *  // will match days before the 2nd of February 2019 }\\n * const beforeMatcher: DateBefore = { before: : new Date(2019, 1, 2); };\\n *\\n * // will match Sundays\\n * const dayOfWeekMatcher: DayOfWeek = {\\n *  dayOfWeek: 0\\n * };\\n *\\n * // will match the included days, except the two dates\\n * const intervalMatcher: DateInterval = {\\n *    after: new Date(2019, 1, 2);,\\n *    before: new Date(2019, 1, 5)\\n * };\\n *\\n * // will match the included days, including the two dates\\n * const rangeMatcher: DateRange = {\\n *    from: new Date(2019, 1, 2);,\\n *    to: new Date(2019, 1, 5)\\n * };\\n *\\n * // will match when the function return true\\n * const functionMatcher: Matcher = (day: Date) => {\\n *  return day.getMonth() === 2 // match when month is March\\n * };\\n * ```\\n * @see {@link isMatch}\\n */\\ntype Matcher = boolean | ((date: Date) => boolean) | Date | Date[] | DateRange | DateBefore | DateAfter | DateInterval | DayOfWeek;\\n/** A matcher to match a day falling after the specified date, with the date not included. */\\ntype DateAfter = {\\n    after: Date;\\n};\\n/** A matcher to match a day falling before the specified date, with the date not included. */\\ntype DateBefore = {\\n    before: Date;\\n};\\n/** A matcher to match a day falling before and/or after two dates, where the dates are not included. */\\ntype DateInterval = {\\n    before: Date;\\n    after: Date;\\n};\\n/** A matcher to match a range of dates. The range can be open. Differently from {@link DateInterval}, the dates here are included. */\\ntype DateRange = {\\n    from: Date | undefined;\\n    to?: Date | undefined;\\n};\\n/** A matcher to match a date being one of the specified days of the week (`0-7`, where `0` is Sunday). */\\ntype DayOfWeek = {\\n    dayOfWeek: number[];\\n};\\n/** Returns true if `matcher` is of type {@link DateInterval}. */\\ndeclare function isDateInterval(matcher: unknown): matcher is DateInterval;\\n/** Returns true if `value` is a {@link DateRange} type. */\\ndeclare function isDateRange(value: unknown): value is DateRange;\\n/** Returns true if `value` is of type {@link DateAfter}. */\\ndeclare function isDateAfterType(value: unknown): value is DateAfter;\\n/** Returns true if `value` is of type {@link DateBefore}. */\\ndeclare function isDateBeforeType(value: unknown): value is DateBefore;\\n/** Returns true if `value` is a {@link DayOfWeek} type. */\\ndeclare function isDayOfWeekType(value: unknown): value is DayOfWeek;\\n\\n/** A _modifier_ represents different styles or states of a day displayed in the calendar. */\\ntype CustomModifier = string;\\n/** The modifiers used by DayPicker. */\\ntype Modifiers = Record<CustomModifier, Matcher[]> & Record<InternalModifier, Matcher[]>;\\n/** The name of the modifiers that are used internally by DayPicker. */\\ntype InternalModifier = 'outside' | 'disabled' | 'selected' | 'hidden' | 'today' | 'range_start' | 'range_end' | 'range_middle';\\n/**\\n * The modifiers that are matching a day in the calendar. Use the {@link useActiveModifiers} hook to get the modifiers for a day.\\n *\\n * ```\\n * const matchingModifiers: MatchingModifiers = {\\n *  selected: true,\\n *  customModifier: true\\n * }\\n * ```\\n *\\n * */\\ntype MatchingModifiers = Record<CustomModifier, boolean> & Record<InternalModifier, boolean>;\\n/** The style to apply to each day element matching a modifier. */\\ntype ModifiersStyles = Record<CustomModifier, React.CSSProperties> & Partial<Record<InternalModifier, React.CSSProperties>>;\\n/** The classnames to assign to each day element matching a modifier. */\\ntype ModifiersClassNames = Record<CustomModifier, string> & Partial<Record<InternalModifier, string>>;\\n\\ninterface DayGridCellProps extends React$1.PropsWithChildren {\\n    day: DayPickerDay;\\n    state: MatchingModifiers;\\n    htmlAttributes: React$1.HTMLAttributes<HTMLDivElement>;\\n}\\n/** Render the gridcell with the Day. */\\ndeclare function DayGridCell(props: DayGridCellProps): JSX.Element;\\n\\ninterface MonthCaptionProps {\\n    id: string;\\n    month: DayPickerMonth;\\n}\\ndeclare function MonthCaption(props: MonthCaptionProps): JSX.Element;\\n\\ninterface MonthGridProps extends Pick<React$1.AriaAttributes, 'aria-labelledby'> {\\n    /** The month where the grid is displayed. */\\n    month: DayPickerMonth;\\n    /** The index where this month is displayed. */\\n    displayIndex: number;\\n}\\n/**\\n * Render the grid with the weekday header row and the weeks for the given month.\\n */\\ndeclare function MonthGrid(props: MonthGridProps): JSX.Element;\\n\\ntype CaptionLayout = 'dropdown' | 'buttons' | 'dropdown-buttons';\\ndeclare function Nav(): JSX.Element;\\n\\ninterface WeekdayColumnHeaderProps extends Pick<React$1.AriaAttributes, 'aria-colindex'> {\\n    weekday?: Date;\\n}\\n/** Render the column header with the weekday name (e.g. \\\"Mo\\\", \\\"Tu\\\", etc.) */\\ndeclare function WeekdayColumnHeader(props: WeekdayColumnHeaderProps): JSX.Element;\\n\\ndeclare function WeekdaysRow(): JSX.Element;\\n\\ninterface WeekNumberRowHeaderProps {\\n    week: DayPickerWeek;\\n}\\n/** Render the cell with the number of the week. */\\ndeclare function WeekNumberRowHeader(props: WeekNumberRowHeaderProps): JSX.Element;\\n\\n/**\\n * The props for the {@link WeekRow} component.\\n */\\ninterface WeekRowProps extends Pick<React$1.AriaAttributes, 'aria-rowindex'> {\\n    week: DayPickerWeek;\\n}\\n/** Render a row in the calendar, with the days and the week number. */\\ndeclare function WeekRow(props: WeekRowProps): JSX.Element;\\n\\ntype DaySelectEventHandler<TMode extends DaysSelectionMode> = (days: DayPickerSelectedValue<TMode>, selectedDay: Date, state: MatchingModifiers, e: React$1.MouseEvent) => void;\\ntype DayEventHandler<TEvent> = (day: Date, state: MatchingModifiers, e: TEvent) => void;\\n/**\\n * The event handler when a day is clicked.\\n *\\n * @deprecated Use {@link DayMouseEventHandler} instead.\\n */\\ntype DayClickEventHandler = DayEventHandler<React$1.MouseEvent>;\\n/** The event handler when a day is focused. */\\ntype DayFocusEventHandler = DayEventHandler<React$1.FocusEvent | React$1.KeyboardEvent>;\\n/** The event handler when a day gets a keyboard event. */\\ntype DayKeyboardEventHandler = DayEventHandler<React$1.KeyboardEvent>;\\n/** The event handler when a day gets a mouse event. */\\ntype DayMouseEventHandler = DayEventHandler<React$1.MouseEvent>;\\n/** The event handler when a day gets a pointer event. */\\ntype DayPointerEventHandler = DayEventHandler<React$1.PointerEvent>;\\n/** The event handler when a month is changed in the calendar. */\\ntype MonthChangeEventHandler = (month: Date) => void;\\n/**The event handler when the week number is clicked. */\\ntype WeekNumberClickEventHandler = (\\n/** The week number that has been clicked. */\\nweekNumber: number, \\n/** The dates in the clicked week. */\\ndates: Date[], \\n/** The mouse event that triggered this event. */\\ne: React$1.MouseEvent) => void;\\n/** The event handler when a day gets a touch event. */\\ntype DayTouchEventHandler = DayEventHandler<React$1.TouchEvent>;\\n\\n/**\\n * @deprecated Use {@link MonthCaption} or {@link Nav} as custom components instead.\\n */\\ndeclare const Caption: typeof MonthCaption;\\n/**\\n * @deprecated Use {@link MonthCaptionProps} or {@link NavProps} instead.\\n */\\ntype CaptionProps = MonthCaptionProps;\\n/**\\n * @deprecated Use {@link DayGridCell} instead.\\n */\\ndeclare const DayContent: typeof DayGridCell;\\n/**\\n * @deprecated Use {@link DayGridCellProps} instead.\\n */\\ntype DayContentProps = DayGridCellProps;\\n/**\\n * @deprecated Use {@link DayGridCell} instead.\\n */\\ndeclare const Row: typeof WeekRow;\\n/**\\n * @deprecated Use {@link WeekRowProps} instead.\\n */\\ntype RowProps = WeekRowProps;\\n/** @deprecated Use {@link DaySelectEventHandler} instead. */\\ntype SelectRangeEventHandler = DaySelectEventHandler<'range'>;\\n/** @deprecated Use {@link DaySelectEventHandler} instead. */\\ntype SelectSingleEventHandler = DaySelectEventHandler<'single'>;\\n/** @deprecated Use {@link DaySelectEventHandler} instead. */\\ntype SelectMultipleEventHandler = DaySelectEventHandler<'multi'>;\\n\\ndeclare const components_Calendar: typeof Calendar;\\ndeclare const components_Caption: typeof Caption;\\ntype components_CaptionLayout = CaptionLayout;\\ntype components_CaptionProps = CaptionProps;\\ndeclare const components_DayContent: typeof DayContent;\\ntype components_DayContentProps = DayContentProps;\\ndeclare const components_DayGridCell: typeof DayGridCell;\\ntype components_DayGridCellProps = DayGridCellProps;\\ndeclare const components_MonthCaption: typeof MonthCaption;\\ntype components_MonthCaptionProps = MonthCaptionProps;\\ndeclare const components_MonthGrid: typeof MonthGrid;\\ntype components_MonthGridProps = MonthGridProps;\\ndeclare const components_Nav: typeof Nav;\\ndeclare const components_Row: typeof Row;\\ntype components_RowProps = RowProps;\\ntype components_SelectMultipleEventHandler = SelectMultipleEventHandler;\\ntype components_SelectRangeEventHandler = SelectRangeEventHandler;\\ntype components_SelectSingleEventHandler = SelectSingleEventHandler;\\ndeclare const components_WeekNumberRowHeader: typeof WeekNumberRowHeader;\\ntype components_WeekNumberRowHeaderProps = WeekNumberRowHeaderProps;\\ndeclare const components_WeekRow: typeof WeekRow;\\ntype components_WeekRowProps = WeekRowProps;\\ndeclare const components_WeekdayColumnHeader: typeof WeekdayColumnHeader;\\ntype components_WeekdayColumnHeaderProps = WeekdayColumnHeaderProps;\\ndeclare const components_WeekdaysRow: typeof WeekdaysRow;\\ndeclare namespace components {\\n  export {\\n    components_Calendar as Calendar,\\n    components_Caption as Caption,\\n    components_CaptionLayout as CaptionLayout,\\n    components_CaptionProps as CaptionProps,\\n    components_DayContent as DayContent,\\n    components_DayContentProps as DayContentProps,\\n    components_DayGridCell as DayGridCell,\\n    components_DayGridCellProps as DayGridCellProps,\\n    components_MonthCaption as MonthCaption,\\n    components_MonthCaptionProps as MonthCaptionProps,\\n    components_MonthGrid as MonthGrid,\\n    components_MonthGridProps as MonthGridProps,\\n    components_Nav as Nav,\\n    components_Row as Row,\\n    components_RowProps as RowProps,\\n    components_SelectMultipleEventHandler as SelectMultipleEventHandler,\\n    components_SelectRangeEventHandler as SelectRangeEventHandler,\\n    components_SelectSingleEventHandler as SelectSingleEventHandler,\\n    components_WeekNumberRowHeader as WeekNumberRowHeader,\\n    components_WeekNumberRowHeaderProps as WeekNumberRowHeaderProps,\\n    components_WeekRow as WeekRow,\\n    components_WeekRowProps as WeekRowProps,\\n    components_WeekdayColumnHeader as WeekdayColumnHeader,\\n    components_WeekdayColumnHeaderProps as WeekdayColumnHeaderProps,\\n    components_WeekdaysRow as WeekdaysRow,\\n  };\\n}\\n\\n/** Represents a function to format a date. */\\ntype DateFormatter = (date: Date, options?: {\\n    locale?: Locale;\\n}) => string;\\n/** Represent a map of formatters used to render localized content. */\\ntype Formatters = {\\n    /** Format the month in the caption when `captionLayout` is `buttons`. */\\n    formatCaption: DateFormatter;\\n    /** Format the month in the navigation dropdown. */\\n    formatMonthCaption: DateFormatter;\\n    /** Format the year in the navigation dropdown. */\\n    formatYearCaption: DateFormatter;\\n    /** Format the day in the day cell. */\\n    formatDay: DateFormatter;\\n    /** Format the week number. */\\n    formatWeekNumber: WeekNumberFormatter;\\n    /** Format the week day name in the header */\\n    formatWeekdayName: DateFormatter;\\n};\\n/** Represent a function to format the week number. */\\ntype WeekNumberFormatter = (weekNumber: number, options?: {\\n    locale?: Locale;\\n}) => React$1.ReactNode;\\n\\n/** Map of functions to translate ARIA labels for the relative elements. */\\ntype Labels = {\\n    labelMonthDropdown: () => string;\\n    labelYearDropdown: () => string;\\n    /** Function returning the label for the month grid. */\\n    labelGrid: MonthLabel;\\n    labelNext: NavButtonLabel;\\n    labelPrevious: NavButtonLabel;\\n    labelDay: DayLabel;\\n    labelWeekday: WeekdayLabel;\\n    labelWeekNumber: WeekNumberLabel;\\n};\\n/** Return the ARIA label for the {@link Day} component. */\\ntype DayLabel = (day: Date, matchingModifiers: MatchingModifiers, options?: {\\n    locale?: Locale$1;\\n}) => string;\\n/** Return the ARIA label for the \\\"next month\\\" / \\\"prev month\\\" buttons in the navigation.*/\\ntype MonthLabel = (month: Date, options?: {\\n    locale?: Locale$1;\\n}) => string;\\n/** Return the ARIA label for the \\\"next month\\\" / \\\"prev month\\\" buttons in the navigation.*/\\ntype NavButtonLabel = (month?: Date, options?: {\\n    locale?: Locale$1;\\n}) => string;\\n/** Return the ARIA label for the Head component.*/\\ntype WeekdayLabel = (day: Date, options?: {\\n    locale?: Locale$1;\\n}) => string;\\n/** Return the ARIA label of the week number.*/\\ntype WeekNumberLabel = (n: number, options?: {\\n    locale?: Locale$1;\\n}) => string;\\n\\ndeclare const styles: {\\n  'root': string\\n  'vhidden': string\\n  'with_weeknumber': string\\n  'months_wrapper': string\\n  'caption': string\\n  'multiple_months': string\\n  'caption_dropdowns': string\\n  'caption_label': string\\n  'nav': string\\n  'caption_start': string\\n  'caption_end': string\\n  'button_next': string\\n  'button_previous': string\\n  'dropdown_year': string\\n  'dropdown_month': string\\n  'dropdown': string\\n  'dropdown_icon': string\\n  'head': string\\n  'head_row': string\\n  'row': string\\n  'head_cell': string\\n  'tbody': string\\n  'footer': string\\n  'cell': string\\n  'weeknumber_rowheader': string\\n  'day': string\\n  'day_today': string\\n  'day_outside': string\\n  'day_selected': string\\n  'day_disabled': string\\n  'day_hidden': string\\n  'day_range_start': string\\n  'day_range_end': string\\n  'day_range_middle': string\\n  'weekdays_row': string\\n  'weekday_columnheader': string\\n  'week_row': string\\n  'month_grid_wrapper': string\\n  'month_rowgroup': string\\n  'month_grid': string\\n  'month_caption': string\\n  'caption_between': string\\n  'button_icon': string\\n}\\n\\n/** The style (either via class names or via in-line styles) of an element. */\\ntype StyledElement<T = string | React$1.CSSProperties> = {\\n    /** The calendar element (root). */\\n    readonly root: T;\\n    /** The root element when `numberOfMonths > 1`. */\\n    readonly multiple_months: T;\\n    /** The root element when `showWeekNumber={true}`. */\\n    readonly with_weeknumber: T;\\n    /** The style of an element visually hidden. */\\n    readonly vhidden: T;\\n    /** The style for resetting the buttons. */\\n    readonly button_reset: T;\\n    /** The buttons. */\\n    readonly button: T;\\n    /** The caption (showing the calendar heading and the navigation) */\\n    readonly month_caption: T;\\n    /** The caption when at the start of a series of months. */\\n    readonly caption_start: T;\\n    /** The caption when at the end of a series of months. */\\n    readonly caption_end: T;\\n    /** The caption when between two months (when `multipleMonths > 2`). */\\n    readonly caption_between: T;\\n    /** The caption label. */\\n    readonly caption_label: T;\\n    /** The drop-downs container. */\\n    readonly caption_dropdowns: T;\\n    /** The drop-down (select) element. */\\n    readonly dropdown: T;\\n    /** The drop-down to change the month. */\\n    readonly dropdown_month: T;\\n    /** The drop-down to change the year. */\\n    readonly dropdown_year: T;\\n    /** The drop-down icon. */\\n    readonly dropdown_icon: T;\\n    /** The navigation container. */\\n    readonly nav: T;\\n    /** The navigation button. */\\n    readonly nav_button: T;\\n    /** The \\\"previous month\\\" navigation button. */\\n    readonly nav_button_previous: T;\\n    /** The \\\"next month\\\" navigation button. */\\n    readonly nav_button_next: T;\\n    /** The icon for the navigation button. */\\n    readonly button_icon: T;\\n    /** The months wrapper. */\\n    readonly months_wrapper: T;\\n    /** The container of the grid displaying the month and the month caption. */\\n    readonly month_grid_wrapper: T;\\n    /** The grid displaying the month. */\\n    readonly month_grid: T;\\n    /** The row grouping the week rows in the month grid. */\\n    readonly month_rowgroup: T;\\n    /** The row with the weekday column headers. */\\n    readonly weekdays_row: T;\\n    /** The weekday column header. */\\n    readonly weekday_columnheader: T;\\n    /** The row with the week. */\\n    readonly week_row: T;\\n    /** The weeknumber displayed in the column. */\\n    readonly weeknumber: T;\\n    /** The cell containing the weeknumber row header. */\\n    readonly weeknumber_rowheader: T;\\n    /** The day grid cell. */\\n    readonly day: T;\\n    /** The day when outside the month. */\\n    readonly day_outside: T;\\n    /** The day when selected. */\\n    readonly day_selected: T;\\n    /** The day when disabled. */\\n    readonly day_disabled: T;\\n    /** The day when hidden. */\\n    readonly day_hidden: T;\\n    /** The day when at the start of a selected range. */\\n    readonly day_range_start: T;\\n    /** The day when at the end of a selected range. */\\n    readonly day_range_end: T;\\n    /** The day in the middle of a selected range: it does not include the \\\"from\\\" and the \\\"to\\\" days. */\\n    readonly day_range_middle: T;\\n    /** The day when today. */\\n    readonly day_today: T;\\n    /** The footer when today. */\\n    readonly footer: T;\\n};\\n/** These elements must not be in the `styles` or `classNames` records as they are styled via the `modifiersStyles` or `modifiersClassNames` pop */\\ntype InternalModifiersElement = 'day_outside' | 'day_selected' | 'day_disabled' | 'day_hidden' | 'day_range_start' | 'day_range_end' | 'day_range_middle' | 'day_today';\\n/** The class names of each element. */\\ntype ClassNames = typeof styles;\\n/**\\n * The inline-styles of each styled element, to use with the `styles` prop. Day\\n * modifiers, such as `today` or `hidden`, should be styled using the\\n * `modifiersStyles` prop.\\n */\\ntype Styles = Partial<Omit<StyledElement<React$1.CSSProperties>, InternalModifiersElement>>;\\n/** Props of a component that can be styled via classNames or inline-styles. */\\ntype StyledComponent = {\\n    className?: string;\\n    style?: React$1.CSSProperties;\\n} & React$1.PropsWithChildren;\\n\\ntype CustomComponents = {\\n    [key in keyof typeof components]?: (typeof components)[key];\\n};\\n/** The name of a color in our color palette. */\\ntype DaysSelectionMode = 'none' | 'range' | 'single' | 'multi';\\ntype DayPickerSelectedValue<TMode extends DaysSelectionMode | unknown> = [\\n    TMode\\n] extends ['single'] ? Date | undefined : [TMode] extends ['multi'] ? Array<Date> : [TMode] extends ['range'] ? DateRange : never;\\n/**\\n * The {@link DayPicker} component props shared with all the selection modes.\\n */\\ninterface DayPickerBaseProps {\\n    /**\\n     * The CSS class to add to the container element. To change the name of the\\n     * class instead, use `classNames.root`.\\n     */\\n    className?: string;\\n    /**\\n     * Change the class names of the HTML elements.\\n     *\\n     * Use this prop when you need to change the default class names — for example\\n     * when using CSS modules.\\n     */\\n    classNames?: Partial<ClassNames>;\\n    /**\\n     * Change the class name for the day matching the {@link modifiers}.\\n     */\\n    modifiersClassNames?: ModifiersClassNames;\\n    /**\\n     * Style to apply to the container element.\\n     */\\n    style?: React$1.CSSProperties;\\n    /**\\n     * Change the inline styles of the HTML elements.\\n     */\\n    styles?: Styles;\\n    /**\\n     * Change the inline style for the day matching the {@link modifiers}.\\n     */\\n    modifiersStyles?: ModifiersStyles;\\n    /**\\n     * A unique id to replace the random generated id – used by DayPicker for\\n     * accessibility.\\n     */\\n    id?: string;\\n    /**\\n     * The initial month to show in the calendar. Use this prop to let DayPicker\\n     * control the current month. If you need to set the month programmatically,\\n     * use {@link month} and {@link onMonthChange}.\\n     *\\n     * @defaultValue The current month\\n     */\\n    defaultMonth?: Date;\\n    /**\\n     * The month displayed in the calendar.\\n     *\\n     * As opposed to {@link DayPickerBase.defaultMonth}, use this prop with\\n     * {@link DayPickerBase.onMonthChange} to change the month programmatically.\\n     */\\n    month?: Date;\\n    /**\\n     * Event fired when the user navigates between months.\\n     */\\n    onMonthChange?: MonthChangeEventHandler;\\n    /**\\n     * The number of displayed months.\\n     *\\n     * @defaultValue 1\\n     */\\n    numberOfMonths?: number;\\n    /**\\n     * The earliest day to start the month navigation.\\n     */\\n    fromDate?: Date;\\n    /**\\n     * The latest day to end the month navigation.\\n     */\\n    toDate?: Date;\\n    /**\\n     * The earliest month to start the month navigation.\\n     */\\n    fromMonth?: Date;\\n    /**\\n     * The latest month to end the month navigation.\\n     */\\n    toMonth?: Date;\\n    /**\\n     * The earliest year to start the month navigation.\\n     */\\n    fromYear?: number;\\n    /**\\n     * The latest year to end the month navigation.\\n     */\\n    toYear?: number;\\n    /**\\n     * Disable the navigation between months.\\n     *\\n     * @defaultValue false\\n     */\\n    disableNavigation?: boolean;\\n    /**\\n     * Paginate the month navigation displaying the {@link numberOfMonths} at\\n     * time.\\n     *\\n     * @defaultValue false\\n     */\\n    pagedNavigation?: boolean;\\n    /**\\n     * Render the months in reversed order (when {@link numberOfMonths} is greater\\n     * than `1`) to display the most recent month first.\\n     *\\n     * @defaultValue false\\n     */\\n    reverseMonths?: boolean;\\n    /**\\n     * Change the layout of the caption:\\n     *\\n     * - `buttons`: display prev/right buttons\\n     * - `dropdown`: display drop-downs to change the month and the year\\n     *\\n     * **Note:** the `dropdown` layout is available only when `fromDate`,\\n     * `fromMonth` or`fromYear` and `toDate`, `toMonth` or `toYear` are set.\\n     *\\n     * @defaultValue buttons\\n     */\\n    captionLayout?: CaptionLayout;\\n    /**\\n     * Display six weeks per months, regardless the month’s number of weeks.\\n     * To use this prop, {@link showOutsideDays} must be set.\\n     *\\n     * @defaultValue false\\n     */\\n    fixedWeeks?: boolean;\\n    /**\\n     * Hide the row displaying the weekday row header.\\n     *\\n     * @defaultValue false\\n     */\\n    hideWeekdayRow?: boolean;\\n    /**\\n     * Show the outside days.  An outside day is a day falling in the next or the\\n     * previous month.\\n     *\\n     * @defaultValue false\\n     */\\n    showOutsideDays?: boolean;\\n    /**\\n     * Show the week numbers column. Weeks are numbered according to the local\\n     * week index.\\n     *\\n     * - to use ISO week numbering, use the {@link ISOWeek} prop.\\n     * - to change how the week numbers are displayed, use the {@link Formatters} prop.\\n     *\\n     * @see  {@link ISOWeek}, {@link weekStartsOn} and {@link firstWeekContainsDate}.\\n     *\\n     * @defaultValue false\\n     */\\n    showWeekNumber?: boolean;\\n    /**\\n     * The index of the first day of the week (0 - Sunday). Overrides the locale's one.\\n     *\\n     * See also {@link ISOWeek}.\\n     */\\n    weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\\n    /**\\n     * The day of January, which is always in the first week of the year. See also\\n     * https://date-fns.org/docs/getWeek and\\n     * https://en.wikipedia.org/wiki/Week#Numbering\\n     *\\n     * See also {@link ISOWeek}.\\n     */\\n    firstWeekContainsDate?: 1 | 2 | 3 | 4 | 5 | 6 | 7;\\n    /**\\n     * Use ISO week dates instead of the locale setting. See also\\n     * https://en.wikipedia.org/wiki/ISO_week_date.\\n     *\\n     * Setting this prop will ignore {@link weekStartsOn} and {@link firstWeekContainsDate}.\\n     */\\n    ISOWeek?: boolean;\\n    /**\\n     * Replace the components used to create the layout with other components\\n     */\\n    components?: CustomComponents;\\n    /**\\n     * Content to add to the table footer element.\\n     */\\n    footer?: React$1.ReactNode;\\n    /**\\n     * When a selection mode is set, DayPicker will focus the first selected day\\n     * (if set) or the today's date (if not disabled).\\n     *\\n     * Use this prop when you need to focus DayPicker after a user actions, for\\n     * improved accessibility.\\n     */\\n    initialFocus?: boolean;\\n    /**\\n     * Apply the `disabled` modifier to the matching days.\\n     */\\n    disabled?: Matcher | Matcher[] | undefined;\\n    /**\\n     * Apply the `hidden` modifier to the matching days. Will hide them from the\\n     * calendar.\\n     */\\n    hidden?: Matcher | Matcher[] | undefined;\\n    /**\\n     * Apply the `selected` modifier to the matching days.\\n     */\\n    selected?: Matcher | Matcher[] | undefined;\\n    /**\\n     * The today’s date. Default is the current date. This Date will get the\\n     * `today` modifier to style the day.\\n     */\\n    today?: Date;\\n    /**\\n     * Add modifiers to the matching days.\\n     */\\n    modifiers?: Record<CustomModifier, Matcher | Matcher[]> | undefined;\\n    /**\\n     * The date-fns locale object used to localize dates.\\n     *\\n     * @defaultValue en-US\\n     */\\n    locale?: Locale;\\n    /**\\n     * Labels creators to override the defaults. Use this prop to customize the\\n     * ARIA labels attributes.\\n     */\\n    labels?: Partial<Labels>;\\n    /**\\n     * The text direction of the calendar. Use `ltr` for left-to-right (default)\\n     * or `rtl` for right-to-left.\\n     */\\n    dir?: string;\\n    /**\\n     * A map of formatters. Use the formatters to override the default formatting\\n     * functions.\\n     */\\n    formatters?: Partial<Formatters>;\\n    onDayClick?: DayMouseEventHandler;\\n    onDayFocus?: DayFocusEventHandler;\\n    onDayBlur?: DayFocusEventHandler;\\n    onDayMouseEnter?: DayMouseEventHandler;\\n    onDayMouseLeave?: DayMouseEventHandler;\\n    onDayKeyDown?: DayKeyboardEventHandler;\\n    onDayKeyUp?: DayKeyboardEventHandler;\\n    onDayKeyPress?: DayKeyboardEventHandler;\\n    onDayPointerEnter?: DayPointerEventHandler;\\n    onDayPointerLeave?: DayPointerEventHandler;\\n    onDayTouchCancel?: DayTouchEventHandler;\\n    onDayTouchEnd?: DayTouchEventHandler;\\n    onDayTouchMove?: DayTouchEventHandler;\\n    onDayTouchStart?: DayTouchEventHandler;\\n    onNextClick?: MonthChangeEventHandler;\\n    onPrevClick?: MonthChangeEventHandler;\\n    onWeekNumberClick?: WeekNumberClickEventHandler;\\n}\\n/**\\n * The props for the {@link DayPicker} component when `mode=\\\"none\\\"`.\\n */\\ninterface DayPickerNoneProps {\\n    mode?: 'none' | undefined;\\n}\\n/**\\n * The props for the {@link DayPicker} component when `mode=\\\"single\\\"`.\\n */\\ninterface DayPickerSingleProps {\\n    mode: 'single';\\n    selected?: DayPickerSelectedValue<'single'> | undefined;\\n    onSelect?: DaySelectEventHandler<'single'>;\\n    required?: boolean;\\n}\\n/**\\n * The props for the {@link DayPicker} component when `mode=\\\"multi\\\"`.\\n */\\ninterface DayPickerMultiProps {\\n    mode: 'multi';\\n    selected?: DayPickerSelectedValue<'multi'> | undefined;\\n    onSelect?: DaySelectEventHandler<'multi'>;\\n    min?: number;\\n    max?: number;\\n}\\n/**\\n * The props for the {@link DayPicker} component when `mode=\\\"range\\\"`.\\n */\\ninterface DayPickerRangeProps {\\n    mode: 'range';\\n    selected?: DayPickerSelectedValue<'range'> | undefined;\\n    onSelect?: DaySelectEventHandler<'range'>;\\n    min?: number;\\n    max?: number;\\n}\\n/**\\n * The props for the {@link DayPicker} component.\\n */\\ntype DayPickerProps = DayPickerBaseProps & (DayPickerSingleProps | DayPickerMultiProps | DayPickerRangeProps | DayPickerNoneProps);\\n/**\\n * DayPicker render a date picker component to let users pick dates from a\\n * calendar. See http://react-day-picker.js.org for updated documentation and\\n * examples.\\n *\\n * ### Customization\\n *\\n * DayPicker offers different customization props. For example,\\n *\\n * - show multi months using `numberOfMonths`\\n * - display a dropdown to navigate the months via `captionLayout`\\n * - display the week numbers with `showWeekNumbers`\\n * - disable or hide days with `disabled` or `hidden`\\n *\\n * ### Controlling the months\\n *\\n * Change the initially displayed month using the `defaultMonth` prop. The\\n * displayed months are controlled by DayPicker and stored in its internal\\n * state. To control the months yourself, use `month` instead of `defaultMonth`\\n * and use the `onMonthChange` event to set it.\\n *\\n * To limit the months the user can navigate to, use\\n * `fromDate`/`fromMonth`/`fromYear` or `toDate`/`toMonth`/`toYear`.\\n *\\n * ### Selection modes\\n *\\n * DayPicker supports different selection mode that can be toggled using the\\n * `mode` prop:\\n *\\n * - `mode=\\\"single\\\"`: only one day can be selected. Use `required` to make the\\n *   selection required. Use the `onSelect` event handler to get the selected\\n *   days.\\n * - `mode=\\\"multi\\\"`: users can select one or more days. Limit the amount of\\n *   days that can be selected with the `min` or the `max` props.\\n * - `mode=\\\"range\\\"`: users can select a range of days. Limit the amount of days\\n *   in the range with the `min` or the `max` props.\\n * - `mode=\\\"default\\\"` (default): the built-in selections are disabled. Implement\\n *   your own selection mode with `onDayClick`.\\n *\\n * The selection modes should cover the most common use cases. In case you\\n * need a more refined way of selecting days, use `mode=\\\"default\\\"`. Use the\\n * `selected` props and add the day event handlers to add/remove days from the\\n * selection.\\n *\\n * ### Modifiers\\n *\\n * A _modifier_ represents different styles or states for the days displayed in\\n * the calendar (like \\\"selected\\\" or \\\"disabled\\\"). Define custom modifiers using\\n * the `modifiers` prop.\\n *\\n * ### Formatters and custom component\\n *\\n * You can customize how the content is displayed in the date picker by using\\n * either the formatters or replacing the internal components.\\n *\\n * For the most common cases you want to use the `formatters` prop to change how\\n * the content is formatted in the calendar. Use the `components` prop to\\n * replace the internal components, like the navigation icons.\\n *\\n * ### Styling\\n *\\n * DayPicker comes with a default, basic style in `react-day-picker/style` – use\\n * it as template for your own style.\\n *\\n * If you are using CSS modules, pass the imported styles object the\\n * `classNames` props.\\n *\\n * You can also style the elements via inline styles using the `styles` prop.\\n *\\n * ### Form fields\\n *\\n * If you need to bind the date picker to a form field, you can use the\\n * `useInput` hooks for a basic behavior. See the `useInput` source as an\\n * example to bind the date picker with form fields.\\n *\\n * ### Localization\\n *\\n * To localize DayPicker, import the locale from `date-fns` package and use the\\n * `locale` prop.\\n *\\n * For example, to use Spanish locale:\\n *\\n * ```\\n * import { es } from 'date-fns/locale';\\n * <DayPicker locale={es} />\\n * ```\\n */\\ndeclare function DayPicker(props: DayPickerProps): JSX.Element;\\n\\n/** A record with `data-*` attributes passed to {@link DayPicker}. */\\ntype DataAttributes = Record<string, unknown>;\\n/**\\n * The {@link DayPickerProps} with their default values. Use this type within\\n * internal components to use safe props and avoid all conditionals.\\n */\\ninterface DayPickerContext<TMode extends DaysSelectionMode | unknown> {\\n    mode: TMode | unknown;\\n    captionLayout: CaptionLayout;\\n    className: string | undefined;\\n    classNames: Required<ClassNames>;\\n    components: Partial<CustomComponents> | undefined;\\n    dataAttributes: DataAttributes;\\n    defaultMonth: Date | undefined;\\n    dir: string | undefined;\\n    disabled?: DayPickerBaseProps['disabled'];\\n    disableNavigation: boolean;\\n    firstWeekContainsDate: DayPickerBaseProps['firstWeekContainsDate'];\\n    fixedWeeks: boolean;\\n    footer: React$1.ReactNode | undefined;\\n    formatters: Formatters;\\n    fromDate: Date | undefined;\\n    fromMonth: Date | undefined;\\n    fromYear: number | undefined;\\n    hidden?: DayPickerBaseProps['hidden'];\\n    hideWeekdayRow: boolean;\\n    id: string | undefined;\\n    initialFocus: boolean;\\n    ISOWeek: boolean;\\n    labels: Labels;\\n    locale: Locale$1;\\n    max: number | undefined;\\n    min: number | undefined;\\n    modifiers: Record<CustomModifier, Matcher | Matcher[]> | undefined;\\n    modifiersClassNames: ModifiersClassNames | undefined;\\n    modifiersStyles: Partial<ModifiersStyles> | undefined;\\n    month: Date | undefined;\\n    numberOfMonths: number;\\n    onMonthChange: MonthChangeEventHandler | undefined;\\n    pagedNavigation: boolean;\\n    required: boolean;\\n    reverseMonths: boolean;\\n    selected?: DayPickerBaseProps['selected'];\\n    showOutsideDays: boolean;\\n    showWeekNumber: boolean;\\n    style: React$1.CSSProperties | undefined;\\n    styles: Partial<Styles> | undefined;\\n    toDate: Date | undefined;\\n    today: Date;\\n    toMonth: Date | undefined;\\n    toYear: number | undefined;\\n    weekStartsOn: DayPickerBaseProps['weekStartsOn'];\\n    onDayClick: DayMouseEventHandler | undefined;\\n    onDayFocus: DayFocusEventHandler | undefined;\\n    onDayBlur: DayFocusEventHandler | undefined;\\n    onDayMouseEnter: DayMouseEventHandler | undefined;\\n    onDayMouseLeave: DayMouseEventHandler | undefined;\\n    onDayKeyDown: DayKeyboardEventHandler | undefined;\\n    onDayKeyUp: DayKeyboardEventHandler | undefined;\\n    onDayKeyPress: DayKeyboardEventHandler | undefined;\\n    onDayPointerEnter: DayPointerEventHandler | undefined;\\n    onDayPointerLeave: DayPointerEventHandler | undefined;\\n    onDayTouchCancel: DayTouchEventHandler | undefined;\\n    onDayTouchEnd: DayTouchEventHandler | undefined;\\n    onDayTouchMove: DayTouchEventHandler | undefined;\\n    onDayTouchStart: DayTouchEventHandler | undefined;\\n    onNextClick: MonthChangeEventHandler | undefined;\\n    onPrevClick: MonthChangeEventHandler | undefined;\\n    onWeekNumberClick: WeekNumberClickEventHandler | undefined;\\n    onSelectSingle: DaySelectEventHandler<'single'> | undefined;\\n    onSelectMulti: DaySelectEventHandler<'multi'> | undefined;\\n    onSelectRange: DaySelectEventHandler<'range'> | undefined;\\n}\\ndeclare const dayPickerContext: React$1.Context<DayPickerContext<unknown> | undefined>;\\n/** The props for the {@link DayPickerProvider}. */\\ninterface DayPickerProviderProps<TMode extends DaysSelectionMode> {\\n    mode: TMode;\\n    /** The initial props from the DayPicker component. */\\n    dayPickerProps: DayPickerProps;\\n    children: ReactNode;\\n}\\n/**\\n * The provider for the {@link dayPickerContext}, storing the props and setting its defaults.\\n * Must be the root of all the providers.\\n */\\ndeclare function DayPickerProvider<TMode extends DaysSelectionMode>(providerProps: DayPickerProviderProps<TMode>): JSX.Element;\\n/**\\n * Use this hook to access to the DayPicker context within custom components. */\\ndeclare function useDayPicker(): DayPickerContext<unknown>;\\n\\n/**\\n * The default formatter for the caption.\\n */\\ndeclare function formatCaption(month: Date, options?: {\\n    locale?: Locale$1;\\n}): string;\\n\\n/**\\n * The default formatter for the Day button.\\n */\\ndeclare function formatDay(day: Date, options?: {\\n    locale?: Locale$1;\\n}): string;\\n\\n/**\\n * The default formatter for the Month caption.\\n */\\ndeclare function formatMonthCaption(month: Date, options?: {\\n    locale?: Locale$1;\\n}): string;\\n\\n/**\\n * The default formatter for the week number.\\n */\\ndeclare function formatWeekNumber(weekNumber: number): string;\\n\\n/**\\n * The default formatter for the name of the weekday.\\n */\\ndeclare function formatWeekdayName(weekday: Date, options?: {\\n    locale?: Locale$1;\\n}): string;\\n\\n/**\\n * The default formatter for the Year caption.\\n */\\ndeclare function formatYearCaption(year: Date, options?: {\\n    locale?: Locale;\\n}): string;\\n\\n/** The props to attach to the input field when using {@link useInput}. */\\ntype InputHTMLAttributes = Pick<React$1.InputHTMLAttributes<HTMLInputElement>, 'onBlur' | 'onChange' | 'onFocus' | 'value' | 'placeholder'>;\\n/** The props to attach to the DayPicker component when using {@link useInput}. */\\ntype InputDayPickerProps = Pick<DayPickerSingleProps, 'selected'> & Pick<DayPickerBaseProps, 'fromDate' | 'toDate' | 'locale' | 'month' | 'onDayClick' | 'onMonthChange' | 'today'>;\\ninterface UseInputOptions extends Pick<DayPickerBaseProps, 'locale' | 'fromDate' | 'toDate' | 'fromMonth' | 'toMonth' | 'fromYear' | 'toYear' | 'today'> {\\n    /** The initially selected date */\\n    defaultSelected?: Date;\\n    /**\\n     * The format string for formatting the input field. See\\n     * https://date-fns.org/docs/format for a list of format strings.\\n     *\\n     * @defaultValue PP\\n     */\\n    format?: string;\\n    /** Make the selection required. */\\n    required?: boolean;\\n}\\n/** Represent the value returned by {@link useInput}. */\\ninterface UseInputValue {\\n    /** The props to pass to a DayPicker component. */\\n    dayPickerProps: InputDayPickerProps;\\n    /** The props to pass to an input field. */\\n    htmlAttributes: InputHTMLAttributes;\\n    /** A function to reset to the initial state. */\\n    reset: () => void;\\n    /** A function to set the selected day. */\\n    setSelected: (day: Date | undefined) => void;\\n}\\n/** Return props and setters for binding an input field to DayPicker. */\\ndeclare function useInput(options?: UseInputOptions): UseInputValue;\\n\\n/**\\n * The default ARIA label for the day button.\\n */\\ndeclare const labelDay: DayLabel;\\n\\n/**\\n * The default ARIA label for the WeekNumber element.\\n */\\ndeclare const labelMonthDropdown: () => string;\\n\\n/**\\n * The default ARIA label for next month button in navigation\\n */\\ndeclare const labelNext: NavButtonLabel;\\n\\n/**\\n * The default ARIA label for previous month grid.\\n */\\ndeclare function labelGrid(month: Date, options?: {\\n    locale?: Locale$1;\\n}): string;\\n\\n/**\\n * The default ARIA label for previous month button in navigation\\n */\\ndeclare const labelPrevious: NavButtonLabel;\\n\\n/**\\n * The default ARIA label for the Weekday element.\\n */\\ndeclare const labelWeekday: WeekdayLabel;\\n\\n/**\\n * The default ARIA label for the WeekNumber element.\\n */\\ndeclare const labelWeekNumber: WeekNumberLabel;\\n\\n/**\\n * The default ARIA label for the WeekNumber element.\\n */\\ndeclare const labelYearDropdown: () => string;\\n\\nexport { Calendar, CalendarProvider, Caption, CaptionLayout, CaptionProps, ClassNames, CustomComponents, CustomModifier, DataAttributes, DateAfter, DateBefore, DateFormatter, DateInterval, DateRange, DayClickEventHandler, DayContent, DayContentProps, DayEventHandler, DayFocusEventHandler, DayGridCell, DayGridCellProps, DayKeyboardEventHandler, DayLabel, DayMouseEventHandler, DayOfWeek, DayPicker, DayPickerBaseProps, DayPickerCalendar, DayPickerContext, DayPickerDay, DayPickerMonth, DayPickerMultiProps, DayPickerNoneProps, DayPickerProps, DayPickerProvider, DayPickerProviderProps, DayPickerRangeProps, DayPickerSelectedValue, DayPickerSingleProps, DayPickerWeek, DayPointerEventHandler, DaySelectEventHandler, DayTouchEventHandler, DaysSelectionMode, Formatters, InputDayPickerProps, InputHTMLAttributes, InternalModifier, InternalModifiersElement, Labels, Matcher, MatchingModifiers, Modifiers, ModifiersClassNames, ModifiersStyles, MonthCaption, MonthCaptionProps, MonthChangeEventHandler, MonthGrid, MonthGridProps, MonthLabel, Nav, NavButtonLabel, Row, RowProps, SelectMultipleEventHandler, SelectRangeEventHandler, SelectSingleEventHandler, StyledComponent, StyledElement, Styles, UseInputOptions, UseInputValue, WeekNumberClickEventHandler, WeekNumberFormatter, WeekNumberLabel, WeekNumberRowHeader, WeekNumberRowHeaderProps, WeekRow, WeekRowProps, WeekdayColumnHeader, WeekdayColumnHeaderProps, WeekdayLabel, WeekdaysRow, calendarContext, dayPickerContext, formatCaption, formatDay, formatMonthCaption, formatWeekNumber, formatWeekdayName, formatYearCaption, isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDayOfWeekType, labelDay, labelGrid, labelMonthDropdown, labelNext, labelPrevious, labelWeekNumber, labelWeekday, labelYearDropdown, useCalendar, useDayPicker, useInput };\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/.pnpm/raw-loader@4.0.2_webpack@5.83.1/node_modules/raw-loader/dist/cjs.js!./.build-sandpack/index.d.ts\n"));

/***/ })

});